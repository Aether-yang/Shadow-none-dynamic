apply plugin: 'com.android.application'
apply plugin: 'com.tencent.shadow.plugin'

// 覆盖改写 gradle.properties，供模块中覆写项目中变量值；当前不生效
//project.logger.warn("prev useAndroidX=${project.getProperty('android.useAndroidX')}, enableJetifier=${project.getProperty('android.enableJetifier')}")
//project.setProperty("android.useAndroidX", false)
//project.setProperty("android.enableJetifier", false)
//project.logger.warn("post useAndroidX=${project.getProperty("android.useAndroidX")}, enableJetifier=${project.getProperty("android.enableJetifier")}")

android {
    compileSdkVersion project.COMPILE_SDK_VERSION

    //buildToolsVersion "30.0.3"
    ndkVersion "25.2.9519653"

    defaultConfig {
        applicationId project.TEST_HOST_APP_APPLICATION_ID + ".single"
        minSdkVersion project.MIN_SDK_VERSION
        targetSdkVersion project.TARGET_SDK_VERSION
        versionCode project.VERSION_CODE
        versionName project.VERSION_NAME
        testInstrumentationRunner "com.tencent.shadow.test.plugin.general_cases.app.CustomAndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11"  //可选：指定 C++ 标准
                abiFilters "armeabi-v7a" , "arm64-v8a", "x86", "x86_64" //, "armeabi", "mips", "mips64"
            }
        }
        ndk {
            //noinspection ChromeOsAbiSupport
            abiFilters "arm64-v8a", "armeabi-v7a" //, "x86_64", "x86"
        }
    }

    /*ndk {//指定生成的lib，比如此时生成 libNdkTest.so
        moduleName   "NdkTest"
    }*/
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"  // CMakeLists.txt 路径
            version "3.29.2"                    // CMake 版本
        }
    }
    sourceSets {
        main {
            jni.srcDirs = ['src/main/cpp']
            jniLibs.srcDirs = ['libs']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.create("release")
            signingConfig.initWith(buildTypes.debug.signingConfig)
        }
    }

    // 将插件applicationId设置为和宿主相同
    productFlavors {
        plugin {
            applicationId project.TEST_HOST_APP_APPLICATION_ID
        }
    }

    lintOptions {
        abortOnError false
    }

    // 将插件的资源ID分区改为和宿主0x7F不同的值, minSdkVersion大于26时--package-id必须大于0x7f
    aaptOptions {
        additionalParameters "--package-id", "0x7E", "--allow-reserved-package-id"
    }
}

dependencies {
    implementation "com.android.support:support-annotations:$android_support_annotations_version"
    implementation "com.android.support:support-v4:$android_support_version"
    pluginCompileOnly "androidx.test.espresso:espresso-idling-resource:$espresso_version"
    normalImplementation "androidx.test.espresso:espresso-idling-resource:$espresso_version"

    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test:core:$androidx_test_version"
    androidTestImplementation "androidx.test.ext:junit:$androidx_test_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-remote:$espresso_version"
    androidTestImplementation "androidx.test:runner:$androidx_test_version"

    //implementation project(':custom-view')
    //pluginCompileOnly project(':plugin-use-host-code-lib')
    //Shadow Transform后业务代码会有一部分实际引用runtime中的类
    //如果不以compileOnly方式依赖，会导致其他Transform或者Proguard找不到这些类
    pluginCompileOnly "com.tencent.shadow.core:runtime:$shadow_version"
}

buildscript {
    repositories {
        if (!System.getenv().containsKey("DISABLE_TENCENT_MAVEN_MIRROR")) {
            maven { url 'https://mirrors.tencent.com/nexus/repository/maven-public/' }
        } else {
            google()
            mavenCentral()
        }
        mavenLocal()
        maven { url 'https://jitpack.io' } //jitpack 可用于引用github和gitee
    }

    dependencies {
        classpath "com.tencent.shadow.core:runtime:$shadow_version"
        classpath "com.tencent.shadow.core:activity-container:$shadow_version"
        classpath "com.tencent.shadow.core:gradle-plugin:$shadow_version"
        //classpath "org.javassist:javassist:$javassist_version"
    }
}
/*
shadow {
    transform {
//        useHostContext = ['abc']
    }

    packagePlugin {
        pluginTypes {
            debug {
                loaderApkConfig = new Tuple2('test-dynamic-loader-debug.apk', ':test-dynamic-loader:assembleDebug')
                runtimeApkConfig = new Tuple2('test-dynamic-runtime-debug.apk', ':test-dynamic-runtime:assembleDebug')
                pluginApks {
                    pluginApk1 {
                        businessName = 'general-cases'
                        partKey = 'test-plugin-general-cases'
                        buildTask = ':test-plugin-general-cases:assemblePluginDebug'
                        apkPath = 'projects/test/plugin/general-cases/test-plugin-general-cases/build/outputs/apk/plugin/debug/test-plugin-general-cases-plugin-debug.apk'
                        hostWhiteList = ["androidx.test.espresso",//这个包添加是为了general-cases插件中可以访问测试框架的类
                                         "com.tencent.shadow.test.lib.plugin_use_host_code_lib.interfaces"]//测试插件访问宿主白名单类
                    }
                    pluginApk4 {
                        businessName = 'plugin-service-for-host'
                        partKey = 'plugin-service-for-host'
                        buildTask = ':plugin-service-for-host:assemblePluginDebug'
                        apkPath = 'projects/test/plugin/particular-cases/plugin-service-for-host/build/outputs/apk/plugin/debug/plugin-service-for-host-plugin-debug.apk'
                    }
                    pluginApk5 {
                        businessName = 'androidx-cases'
                        partKey = 'test-plugin-androidx-cases'
                        buildTask = ':test-plugin-androidx-cases:assemblePluginDebug'
                        apkPath = 'projects/test/plugin/androidx-cases/test-plugin-androidx-cases/build/outputs/apk/plugin/debug/test-plugin-androidx-cases-plugin-debug.apk'
                    }
                }
            }

        }

        loaderApkProjectPath = 'projects/test/dynamic/plugin/test-dynamic-loader'

        runtimeApkProjectPath = 'projects/test/dynamic/plugin/test-dynamic-runtime'

        version = 4
        compactVersion = [1, 2, 3]
        uuidNickName = "1.1.5"
    }
}
*/
